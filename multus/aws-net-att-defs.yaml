apiVersion: "v1"
kind: Namespace
metadata:
  name: openshift-storage
---
# AWS doesn't allow traffic from unknown IPs/MAC addrs, so macvlan is out of the question
# public network is also out of the question because host must route to pub net
# so focus on OVN for cluster net only
# also, OVN is still an overlay, so it likely this won't improve performance; only isolation
# ref: https://docs.openshift.com/container-platform/4.14/networking/multiple_networks/configuring-additional-network.html#configuration-layer-two-switched-topology_configuring-additional-network

apiVersion: k8s.cni.cncf.io/v1
kind: NetworkAttachmentDefinition
metadata:
  name: cluster-net
  namespace: openshift-storage
spec:
  config: |
    {
      "cniVersion": "0.3.1",
      "name": "openshift-storage-cluster-net",
      "type": "ovn-k8s-cni-overlay",
      "topology":"layer2",
      "subnets": "192.168.30.0/24",
      "mtu": 9000,
      "netAttachDefName": "openshift-storage/cluster-net"
    }

# ---
# apiVersion: k8s.cni.cncf.io/v1
# kind: NetworkAttachmentDefinition
# metadata:
#   name: public-net
#   namespace: openshift-storage
#   labels: {}
#   annotations: {}
# spec:
#   config: |
#     {
#       "cniVersion": "0.3.1",
#       "name": "ceph-public-l2-network",
#       "type": "ovn-k8s-cni-overlay",
#       "topology":"layer2",
#       "subnets": "192.168.20.0/24",
#       "mtu": 9000,
#       "netAttachDefName": "openshift-storage/public-net"
#     }

---
# I wonder if using host-device works. Conceptually, host device is very easy since it
# is a 1:1 match with how Ceph networking would be configured, and then multus is just in charge
# of making sure pods have access to only the host's network. For the public net, this also wouldn't
# affect the security of what is recommended because hosts must be able to route to pub net for CSI.
# For cluster net, there is theoretically slightly more security gained by using (e.g.) macvlan
# which makes it so hosts don't route to the cluster net.

# THIS CAUSED THE AWS NODE TO HANG!?!?!
# Could be dangerous
# ...
# 5: br-ex: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc noqueue state UNKNOWN group default qlen 1000
#     link/ether 0a:ff:cd:ec:1a:c9 brd ff:ff:ff:ff:ff:ff
#     inet 10.0.14.198/18 brd 10.0.63.255 scope global dynamic noprefixroute br-ex
#        valid_lft 2699sec preferred_lft 2699sec
#     inet 169.254.169.2/29 brd 169.254.169.7 scope global br-ex
#        valid_lft forever preferred_lft forever
#     inet6 fe80::cd05:715e:aaf1:b7d6/64 scope link noprefixroute
#        valid_lft forever preferred_lft forever
# ...
# is this because it has 3 addrs, and likely 2 of them aren't valid to listen on?
# ceph could possibly still use it as long as X_network configs are used.
# maybe the validation test needs an IP CIDR bind option for the nginx server?
#
# TODO: was this caused by the server listening, or a combo of server listening and client curl'ing?
# apiVersion: k8s.cni.cncf.io/v1
# kind: NetworkAttachmentDefinition
# metadata:
#   name: public-net
#   namespace: openshift-storage
# spec:
#   config: |
#     {
#       "cniVersion": "0.3.1",
#       "type": "host-device",
#       "device": "br-ex"
#     }
